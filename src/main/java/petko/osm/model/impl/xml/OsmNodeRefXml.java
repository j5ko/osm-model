//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.14 at 01:52:08 PM MESZ 
//

package petko.osm.model.impl.xml;

import java.util.Date;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import petko.osm.model.facade.OSMObjectType;
import petko.osm.model.facade.OsmNode;
import petko.osm.model.facade.OsmTag;
import sun.reflect.generics.reflectiveObjects.NotImplementedException;

/**
 * <p>
 * Java class for nd complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="nd">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="ref" use="required" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "nd")
@XmlRootElement(name = "nd")
public class OsmNodeRefXml implements OsmNode {
	@XmlAttribute(name = "ref", required = true)
	private Long ref;

	public OsmNodeRefXml() {
	}

	public OsmNodeRefXml(OsmNode node) {
		this.ref = node.getId();
	}

	/**
	 * Gets the value of the ref property.
	 * 
	 * @return possible object is long
	 * 
	 */
	public Long getRef() {
		return ref;
	}

	/**
	 * Sets the value of the ref property.
	 * 
	 * @param value
	 *            allowed object is long
	 * 
	 */
	public void setRef(Long value) {
		this.ref = value;
	}

	@Override
	public Long getId() {
		return this.ref;
	}

	@Override
	public OSMObjectType getType() {
		return OSMObjectType.NODE;
	}

	@Override
	public String getTagValue(String tagName) {
		throw new NotImplementedException();
	}

	@Override
	public List<OsmTag> getTags() {
		throw new NotImplementedException();
	}

	@Override
	public Double getLatitude() {
		throw new NotImplementedException();
	}

	@Override
	public Double getLongitude() {
		throw new NotImplementedException();
	}

	@Override
	public Long getUid() {
		throw new NotImplementedException();
	}

	@Override
	public String getUser() {
		throw new NotImplementedException();
	}

	@Override
	public Boolean isVisible() {
		throw new NotImplementedException();
	}

	@Override
	public Long getVersion() {
		throw new NotImplementedException();
	}

	@Override
	public Long getChangeset() {
		throw new NotImplementedException();
	}

	@Override
	public Date getTimestamp() {
		throw new NotImplementedException();
	}
}